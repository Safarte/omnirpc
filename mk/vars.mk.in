TARGET_ARCH	= @TARGET_ARCH@

SHELL		= @SHELL@
VPATH		= @srcdir@
srcdir		= @srcdir@
TOPDIR		= @TOPDIR@
top_builddir	?= $(TOPDIR)
MKRULESDIR	= @MKRULESDIR@

prefix		= @prefix@
sysconfdir	= @sysconfdir@
rundir		= @runstatedir@
vardir		= @localstatedir@

ifneq ($(DESTDIR),)
prefix		:= $(DESTDIR)/$(prefix)
sysconfdir	:= $(DESTDIR)/$(sysconfdir)
endif

PREFIX		=	$(prefix)
SYSCONFDIR	=	$(sysconfdir)
RUNDIR		=	$(rundir)
VARDIR		=	$(vardir)

DEST_EXEDIR	= $(prefix)/bin
DEST_SBIN_EXEDIR	= $(prefix)/sbin
DEST_LIBDIR	= $(prefix)/lib
DEST_HDRDIR_TOP	= $(prefix)/include

INSTALL_EXE_DIR		?= $(DEST_EXEDIR)
INSTALL_SBIN_EXE_DIR	?= $(DEST_SBIN_EXEDIR)
INSTALL_LIB_DIR		?= $(DEST_LIBDIR)
INSTALL_HEADER_DIR	?= $(DEST_HDRDIR_TOP)

LIBTOOL_DEPS	= @LIBTOOL_DEPS@

MAKE		= LC_ALL=C @MAKE@
LN_S		= @LN_S@
READLINK		= @READLINK@
BASENAME		= @BASENAME@
RM		= @RM@
MKDIR		= @MKDIR@
LIBTOOL		= LC_ALL=C @LIBTOOL@ --quiet

CC		= @CC@
CXX		= @CXX@
LINK_CC		= $(CC)
LINK_CXX	= $(CXX)
YACC		= @YACC@
LEX		= @LEX@
AWK		= @AWK@

PKGCONF	= @PKGCONF@

INSTALL		= @INSTALL@
INSTALL_DATA	= @INSTALL_DATA@
INSTALL_SCRIPT	= @INSTALL_SCRIPT@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@

BUILD_SRCDIR	= $(TOPDIR)/src
BUILD_INCDIR	= $(TOPDIR)/include
BUILD_LIBDIR	= $(BUILD_SRCDIR)/libomrpc
BUILD_RUNPATH	= $(BUILD_LIBDIR)/.libs

OSDEF	=	@OSDEF@
CPUDEF	=	@CPUDEF@

SITECONF_MK	?=	$(shell ls $(MKRULESDIR)/siteconf.mk 2>/dev/null)
ifdef SITECONF_MK
__SITECONF__=.pre.
include $(SITECONF_MK)
endif

TOOLCHAIN_TARGET	= @TOOLCHAIN_TARGET@

ifdef TOOLCHAIN_TARGET
CPPFLAGS	+= -I/usr/include/x86_64-linux-gnu
endif
CPPFLAGS	+= @OS_CPPFLAGS@
CPPFLAGS	+= -I$(BUILD_INCDIR)

WARN_BASE_CFLAGS	+= -W -Wall -Wextra \
	-Wshadow \
	-Wcast-align \
	-Wwrite-strings \
	-Wconversion \
	-Waddress \
	-Wmissing-format-attribute \
	-Wno-long-long \
	-Wno-variadic-macros
#	-Wlogical-op

WARN_CFLAGS	+=	$(WARN_BASE_CFLAGS) \
	-Wstrict-prototypes \
	-Wold-style-definition \
	-Wmissing-declarations \
	-Wmissing-prototypes \
	-Wnested-externs \
	-Wdeclaration-after-statement

WARN_CXXFLAGS	+=	-std=c++14 \
	$(WARN_BASE_CFLAGS) \
	-Wnon-virtual-dtor \
	-Wstrict-null-sentinel \
	-Woverloaded-virtual

DEBUG_CFLAGS	?= -g3 -fno-omit-frame-pointer
DEBUG_CXXFLAGS	?= -g3 -fno-omit-frame-pointer

OPT_CFLAGS	?= -O0 
OPT_CXXFLAGS	?= -O0

CODEGEN_CFLAGS		+= -fkeep-inline-functions
CODEGEN_CXXFLAGS	+= -fkeep-inline-functions

USE_MPI		=	@USE_MPI@
ifdef USE_MPI
include $(MKRULESDIR)/mpi.mk
CPPFLAGS	+=	$(MPI_CPPFLAGS)
CFLAGS		+=	$(MPI_CFLAGS)
endif

USE_QC_RPC	=	@USE_QC_RPC@

QULACS_SRCDIR	=	@QULACS_SRCDIR@
QULACS_INCDIR	=	$(QULACS_SRCDIR)/include
CPPFLAGS	+=	-I$(QULACS_INCDIR)
QULACS_CSIM_LIBDIR	=	$(QULACS_SRCDIR)/build/src/csim
QULACS_CPPSIM_LIBDIR	=	$(QULACS_SRCDIR)/build/src/cppsim
QULACS_LIBS	= \
	-R $(QULACS_CSIM_LIBDIR) -L$(QULACS_CSIM_LIBDIR) -lcsim_shared \
	-R$(QULACS_CPPSIM_LIBDIR) -L$(QULACS_CPPSIM_LIBDIR) -lcppsim_shared

QURI_DIR	=	@QURI_DIR@

USE_GLOBUS	=	@USE_GLOBUS@
ifndef USE_GLOBUS
GLOBUS_LIBS	=	@GLOBUS_LIBS@
else
GLOBUS_LIBS	=
endif

OMNIRPC_LIBDIR	=	$(TOPDIR)/src/libomrpc
OMRPC_STUBLIB	=	-R $(OMNIRPC_LIBDIR)/.libs -R $(DEST_LIBDIR) \
	-L$(OMNIRPC_LIBDIR) -lomrpc_stub -lomrpc_io -lomrpc_client
OMRPC_CLIENTLIB	=	-R $(OMNIRPC_LIBDIR)/.libs -R $(DEST_LIBDIR) \
	-L$(OMNIRPC_LIBDIR) -lomrpc_client -lomrpc_io

QCS_DIR		=	$(TOPDIR)/qcrpc/QC_API
CPPFLAGS	+=	-I$(QCS_DIR)
QCS_LIB		=	-R $(QCS_DIR)/.libs -R $(DEST_LIBDIR) \
	-L$(QCS_DIR) -lqcs

SLURM_DIR	=	@SLURM_DIR@
ifdef SLURM_DIR
SLURM_LIBDIR	=	$(SLURM_DIR)/lib
SLURM_INCDIR	=	$(SLURM_DIR)/include
SLURM_LIB	=	-R $(SLURM_LIBDIR) \
	-L$(SLURM_LIBDIR) -lslurm
else
SLURM_LIBDIR	=
SLURM_INCDIR	=
SLURM_LIB	=
endif

COMMON_CFLAGS	= $(WARN_CFLAGS) $(DEBUG_CFLAGS) $(OPT_CFLAGS) \
	$(CODEGEN_CFLAGS) $(LOCAL_CFLAGS) $(DEVELOPER_CFLAGS)

COMMON_CXXFLAGS	= -std=gnu++17 $(WARN_CXXFLAGS) $(DEBUG_CXXFLAGS) \
	$(OPT_CXXFLAGS) $(CODEGEN_CXXFLAGS) $(LOCAL_CXXFLAGS) $(DEVELOPER_CXXFLAGS)

CFLAGS		+= @OS_CFLAGS@ @CFLAGS@ $(COMMON_CFLAGS)
CXXFLAGS	+= @OS_CFLAGS@ @CXXFLAGS@ $(COMMON_CXXFLAGS)

LDFLAGS		+= -Wl,--as-needed \
		   @OS_LDFLAGS@ @OS_LIBS@ @LDFLAGS@

OBJS		?= $(filter-out $(SRCS),$(SRCS:.c=.lo)) \
			$(filter-out $(SRCS),$(SRCS:.cc=.lo)) \
			$(filter-out $(SRCS),$(SRCS:.cpp=.lo))

ifdef TARGET_LIB
SHLIB_VERSION	?= 0:0:0
LTLINK_VERSION	= -version-info $(SHLIB_VERSION)
endif
ifdef TARGET_LIB_CXX
SHLIB_VERSION	?= 0:0:0
LTLINK_VERSION	= -version-info $(SHLIB_VERSION)
endif

LTLINK_RPATH	= -rpath $(DEST_LIBDIR)
LTLINK_RUNPATH	= -R $(BUILD_RUNPATH)

LTLINK_RUNPATH	+= 

LTLINK_RUNPATH	+= -R $(DEST_LIBDIR)

STATICBUILD	=	@STATICBUILD@
ifndef STATICBUILD
LT_SHARED	=	-shared
endif

LTCOMPILE_CC	= $(LIBTOOL) --mode=compile --tag=CC $(CC) $(CFLAGS) \
	$(CPPFLAGS) $(LT_SHARED)
LTCOMPILE_CXX	= $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(CXXFLAGS) \
	$(CPPFLAGS) $(LT_SHARED)
LTLIB_CC	= $(LIBTOOL) --mode=link --tag=CC \
	$(LINK_CC) $(CFLAGS) $(LTLINK_RPATH) $(LTLINK_VERSION) $(LT_SHARED)
LTLIB_CXX	= $(LIBTOOL) --mode=link --tag=CXX \
	$(LINK_CXX) $(CXXFLAGS) $(LTLINK_RPATH) $(LTLINK_VERSION) $(LT_SHARED)
LTLINK_CC	= $(LIBTOOL) --mode=link --tag=CC \
	$(LINK_CC) $(CFLAGS) $(LTLINK_RUNPATH) $(LT_SHARED)
LTLINK_CXX	= $(LIBTOOL) --mode=link --tag=CXX \
	$(LINK_CXX) $(CXXFLAGS) $(LTLINK_RUNPATH) $(LT_SHARED)
LTINSTALL_EXE	= $(LIBTOOL) --mode=install $(INSTALL_PROGRAM)
LTINSTALL_LIB	= $(LIBTOOL) --mode=install $(INSTALL_DATA)
LTINSTALL_HEADER= $(LIBTOOL) --mode=install $(INSTALL_DATA)
LTCLEAN		= $(LIBTOOL) --mode=clean $(RM)

HAVE_PROTOC		= @HAVE_PROTOC@
HAVE_GCOVR		= @HAVE_GCOVR@

HAVE_PAPI		= @HAVE_PAPI@

ifdef SITECONF_MK
__SITECONF__=.post.
include $(SITECONF_MK)
endif
